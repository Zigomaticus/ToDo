{"version":3,"sources":["components/app-header/app-header.jsx","components/search-panel/search-panel.jsx","components/todo-list-item/todo-list-item.jsx","components/todo-list/todo-list.jsx","components/item-status-filter/item-status-filter.jsx","components/item-add-form/item-add-form.jsx","components/app/app.jsx","index.js"],"names":["AppHeader","toDo","done","className","SearchPanel","state","term","onSearchChange","e","target","value","setState","props","type","placeholder","this","onChange","React","Component","TodoListItem","label","onDeleted","onToggleImportant","onToggleDone","classNames","important","onClick","TodoList","todos","elements","map","item","id","itemProps","ItemStatusFilter","buttons","name","filter","onFilterChange","clazz","ItemAddForm","onLabelChange","onSubmit","preventDefault","addItem","App","maxId","todoData","createTodoItem","deleteItem","idx","findIndex","el","slice","text","newItem","toggleProperty","arr","propName","oldItem","items","length","toLowerCase","indexOf","visibleItems","search","doneCount","todoCount","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b15b5c20.chunk.js","sourcesContent":["import React from 'react';\r\nimport './app-header.css';\r\n\r\nconst AppHeader = ({toDo, done}) => {\r\n  return (\r\n    <div className=\"app-header d-flex\">\r\n      <h1>Список дел</h1>\r\n      <h2>{toDo} активных, {done} завершённых</h2>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AppHeader;","import React from \"react\";\r\nimport \"./search-panel.css\";\r\n\r\nclass SearchPanel extends React.Component {\r\n  state = {\r\n    term: \"\",\r\n  };\r\n\r\n  onSearchChange = (e) => {\r\n    const term = e.target.value;\r\n    this.setState({\r\n      term,\r\n    });\r\n    this.props.onSearchChange(term)\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <input\r\n        type=\"text\"\r\n        className=\"form-control search-input\"\r\n        placeholder=\"Поиск дел...\"\r\n        value={this.state.term}\r\n        onChange={this.onSearchChange}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchPanel;\r\n","import React, { Component } from 'react';\r\n\r\nimport './todo-list-item.css';\r\n\r\nexport default class TodoListItem extends Component {\r\n\r\n  render() {\r\n    const { label, onDeleted, onToggleImportant, onToggleDone, done, important } = this.props;\r\n\r\n    let classNames = 'todo-list-item';\r\n    if (done) {\r\n      classNames += ' done';\r\n    }\r\n    if (important) {\r\n      classNames += ' important';\r\n    }\r\n\r\n    return (\r\n      <span className={classNames}>\r\n        <span\r\n          className=\"todo-list-item-label\"\r\n          onClick={onToggleDone}>\r\n          {label}\r\n        </span>\r\n\r\n        <button type=\"button\"\r\n                className=\"btn btn-outline-success btn-sm float-right\"\r\n                onClick={onToggleImportant}>\r\n          <i className=\"fa fa-exclamation\" />\r\n        </button>\r\n\r\n        <button type=\"button\"\r\n                className=\"btn btn-outline-danger btn-sm float-right\"\r\n                onClick={onDeleted}\r\n                >\r\n          <i className=\"fa fa-trash-o\" />\r\n        </button>\r\n      </span>\r\n    );\r\n  };\r\n}\r\n","import React from \"react\";\r\n\r\nimport TodoListItem from \"../todo-list-item/todo-list-item\";\r\nimport \"./todo-list.css\";\r\n\r\nconst TodoList = ({ todos, onDeleted, onToggleImportant, onToggleDone }) => {\r\n  const elements = todos.map((item) => {\r\n    const { id, ...itemProps } = item;\r\n\r\n    return (\r\n      <li key={id} className=\"list-group-item\">\r\n        <TodoListItem\r\n          {...itemProps}\r\n          onDeleted={() => onDeleted(id)}\r\n          onToggleImportant={() => onToggleImportant(id)}\r\n          onToggleDone={() => onToggleDone(id)}\r\n        />\r\n      </li>\r\n    );\r\n  });\r\n\r\n  return <ul className=\"list-group todo-list\">{elements}</ul>;\r\n};\r\n\r\nexport default TodoList;\r\n","import React from \"react\";\r\nimport \"./item-status-filter.css\";\r\n\r\nclass ItemStatusFilter extends React.Component {\r\n  buttons = [\r\n    { name: \"all\", label: \"Все\" },\r\n    { name: \"active\", label: \"Активные\" },\r\n    { name: \"done\", label: \"Завершённые\" },\r\n  ];\r\n\r\n  render() {\r\n    const { filter, onFilterChange } = this.props;\r\n\r\n    const buttons = this.buttons.map(({ name, label }) => {\r\n      const isActive = filter === name;\r\n      const clazz = isActive ? \"btn-info\" : \"btn-outline-secondary\";\r\n\r\n      return (\r\n        <button type=\"button\" className={`btn ${clazz}`} key={name}\r\n        onClick={() => onFilterChange(name)}\r\n        >\r\n          {label}\r\n        </button>\r\n      );\r\n    });\r\n\r\n    return <div className=\"btn-group\">{buttons}</div>;\r\n  }\r\n}\r\n\r\nexport default ItemStatusFilter;\r\n","import React from \"react\";\r\nimport \"./item-add-form.css\";\r\n\r\nclass ItemAddForm extends React.Component {\r\n  state = {\r\n    label: \"\",\r\n  };\r\n\r\n  onLabelChange = (e) => {\r\n    this.setState({\r\n      label: e.target.value,\r\n    });\r\n  };\r\n\r\n  onSubmit = (e) => {\r\n    e.preventDefault()\r\n    this.props.addItem(this.state.label);\r\n    this.setState({\r\n      label: ''\r\n    })\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form className=\"item-add-form d-flex\" onSubmit={this.onSubmit}>\r\n        <input\r\n          placeholder=\"Что нужно сделать?\"\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          onChange={this.onLabelChange}\r\n          value={this.state.label}\r\n        />\r\n        <button className=\"btn btn-outline-secondary\">Добавить дело</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ItemAddForm;\r\n","import React from \"react\";\r\nimport {\r\n  AppHeader,\r\n  SearchPanel,\r\n  TodoList,\r\n  ItemStatusFilter,\r\n  ItemAddForm,\r\n} from \"../../components\";\r\nimport \"./app.css\";\r\n\r\nclass App extends React.Component {\r\n  maxId = 100;\r\n\r\n  state = {\r\n    todoData: [\r\n      this.createTodoItem(\"Выучить React\"),\r\n      this.createTodoItem(\"Почистить зубы\"),\r\n      this.createTodoItem(\"Оплатить коммуналку\"),\r\n    ],\r\n    term: \"\",\r\n    filter: \"all\",\r\n  };\r\n\r\n  createTodoItem(label) {\r\n    return { label, important: false, done: false, id: this.maxId++ };\r\n  }\r\n\r\n  deleteItem = (id) => {\r\n    this.setState(({ todoData }) => {\r\n      const idx = todoData.findIndex((el) => el.id === id);\r\n\r\n      const newArray = [...todoData.slice(0, idx), ...todoData.slice(idx + 1)];\r\n      return {\r\n        todoData: newArray,\r\n      };\r\n    });\r\n  };\r\n\r\n  addItem = (text) => {\r\n    const newItem = this.createTodoItem(text);\r\n\r\n    this.setState(({ todoData }) => {\r\n      const newArray = [...todoData, newItem];\r\n\r\n      return {\r\n        todoData: newArray,\r\n      };\r\n    });\r\n  };\r\n\r\n  toggleProperty(arr, id, propName) {\r\n    const idx = arr.findIndex((el) => el.id === id);\r\n    const oldItem = arr[idx];\r\n    const newItem = {\r\n      ...oldItem,\r\n      [propName]: !oldItem[propName],\r\n    };\r\n\r\n    return [...arr.slice(0, idx), newItem, ...arr.slice(idx + 1)];\r\n  }\r\n\r\n  onToggleImportant = (id) => {\r\n    this.setState(({ todoData }) => {\r\n      return {\r\n        todoData: this.toggleProperty(todoData, id, \"important\"),\r\n      };\r\n    });\r\n  };\r\n\r\n  onToggleDone = (id) => {\r\n    this.setState(({ todoData }) => {\r\n      return {\r\n        todoData: this.toggleProperty(todoData, id, \"done\"),\r\n      };\r\n    });\r\n  };\r\n\r\n  search(items, term) {\r\n    if (term.length === 0) {\r\n      return items;\r\n    }\r\n    return items.filter((item) => {\r\n      return item.label.toLowerCase().indexOf(term.toLowerCase()) > -1;\r\n    });\r\n  }\r\n\r\n  filter(items, filter) {\r\n    switch (filter) {\r\n      case \"all\":\r\n        return items;\r\n      case \"active\":\r\n        return items.filter((item) => !item.done);\r\n      case \"done\":\r\n        return items.filter((item) => item.done);\r\n      default:\r\n        return items;\r\n    }\r\n  }\r\n\r\n  onSearchChange = (term) => {\r\n    this.setState({\r\n      term,\r\n    });\r\n  };\r\n\r\n  onFilterChange = (filter) => {\r\n    this.setState({\r\n      filter,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { todoData, term, filter } = this.state;\r\n    const visibleItems = this.filter(this.search(todoData, term), filter);\r\n    const doneCount = todoData.filter((el) => el.done).length;\r\n    const todoCount = todoData.length - doneCount;\r\n\r\n    return (\r\n      <div className=\"todo-app\">\r\n        <AppHeader toDo={todoCount} done={doneCount} />\r\n        <div className=\"top-panel d-flex\">\r\n          <SearchPanel onSearchChange={this.onSearchChange} />\r\n          <ItemStatusFilter\r\n            filter={filter}\r\n            onFilterChange={this.onFilterChange}\r\n          />\r\n        </div>\r\n\r\n        <TodoList\r\n          todos={visibleItems}\r\n          onDeleted={this.deleteItem}\r\n          onToggleImportant={this.onToggleImportant}\r\n          onToggleDone={this.onToggleDone}\r\n        />\r\n        <ItemAddForm addItem={this.addItem} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from './components/app/app'\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}